"use strict";(self.webpackChunkheadless_doc=self.webpackChunkheadless_doc||[]).push([[3586],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3285:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={slug:"/utilities/sanitization",sidebar_label:"Escaping & Sanitization"},i="Escaping & Sanitization",s={unversionedId:"Utilities/sanitization",id:"Utilities/sanitization",title:"Escaping & Sanitization",description:"As you're probably aware, React won't render raw HTML by default. If you want to do so you must use dangerouslySetInnerHTML.",source:"@site/documentation/03- Utilities/sanitization.md",sourceDirName:"03- Utilities",slug:"/utilities/sanitization",permalink:"/docs/learn/utilities/sanitization",draft:!1,editUrl:"https://github.com/10up/headstartwp/tree/trunk/docs/documentation/03- Utilities/sanitization.md",tags:[],version:"current",lastUpdatedBy:"N\xedcholas Andr\xe9",lastUpdatedAt:1693314052,formattedLastUpdatedAt:"Aug 29, 2023",frontMatter:{slug:"/utilities/sanitization",sidebar_label:"Escaping & Sanitization"},sidebar:"tutorialSidebar",previous:{title:"Prefetching data on the server",permalink:"/docs/learn/data-fetching/prefetching"},next:{title:"Rendering Blocks",permalink:"/docs/learn/gutenberg/rendering-blocks"}},l={},p=[{value:"wpKsesPost",id:"wpksespost",level:2},{value:"stripTags",id:"striptags",level:2},{value:"BlocksRenderer",id:"blocksrenderer",level:2},{value:"HtmlDecoder",id:"htmldecoder",level:2},{value:"SafeHtml",id:"safehtml",level:2},{value:"decodeHtmlSpeciaChars",id:"decodehtmlspeciachars",level:2}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"escaping--sanitization"},"Escaping & Sanitization"),(0,a.kt)("p",null,"As you're probably aware, React won't render raw HTML by default. If you want to do so you must use ",(0,a.kt)("a",{parentName:"p",href:"https://react.dev/reference/react-dom/components/common#dangerously-setting-the-inner-html"},"dangerouslySetInnerHTML"),"."),(0,a.kt)("p",null,"This page describes some of the utility functions and components provided by the framework to help with escaping & sanitization when rendering raw markup."),(0,a.kt)("h2",{id:"wpksespost"},"wpKsesPost"),(0,a.kt)("p",null,"This function sanitizes HTML content with requirements similar to ",(0,a.kt)("a",{parentName:"p",href:"https://developer.wordpress.org/reference/functions/wp_kses_post/"},"wp_kses_post"),". If you are rendering arbitrary HTML markup you should probably run the markup through this function first."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { wpKsesPost } from '@headstartwp/core';\n\nconst markup = { __html: wpKsesPost('<p>some raw html</p>') };\nreturn <div dangerouslySetInnerHTML={markup} />;\n")),(0,a.kt)("h2",{id:"striptags"},"stripTags"),(0,a.kt)("p",null,"This function simply strips any html tags from a string. This can be useful in contexts where you don't want any HTML to be rendered."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { stripTags } from '@headstartwp/core';\n\nreturn <h1>{stripTags('this is a title <span>without a span</span>')}</h1>;\n")),(0,a.kt)("h2",{id:"blocksrenderer"},"BlocksRenderer"),(0,a.kt)("p",null,"When using ",(0,a.kt)("a",{parentName:"p",href:"/learn/gutenberg/rendering-blocks"},"BlocksRenderer")," your markup already goes through ",(0,a.kt)("inlineCode",{parentName:"p"},"wpKsesPost")," so there's nothing else you need to worry about."),(0,a.kt)("h2",{id:"htmldecoder"},"HtmlDecoder"),(0,a.kt)("p",null,"Sometimes you might just want to decode some HTML entities without actually rendering any HTML tags. For this purpose you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"HtmlDecoder")," component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { HtmlDecoder } from '@headstartwp/core/react';\n\n<h1>\n    <HtmlDecoder html=\"Hello world! &#8211; foo bar &#8211;\"/>\n</h1>\n")),(0,a.kt)("h2",{id:"safehtml"},"SafeHtml"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"SafeHtml")," component provides an easy way to safely render HTML markup. It runs the markup through ",(0,a.kt)("inlineCode",{parentName:"p"},"wpKsesPost")," just like ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocksRenderer"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { SafeHtml } from '@headstartwp/core/react';\n\n<SafeHtml html=\"<div><p>hello world</p> div content</div>\">\n")),(0,a.kt)("h2",{id:"decodehtmlspeciachars"},"decodeHtmlSpeciaChars"),(0,a.kt)("p",null,"This function will decode a pre-defined set of html special chars."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { decodeHtmlSpeciaChars } from '@headstartwp/core';\n\ndecodeHtmlSpeciaChars('Hello world! &#8211; foo bar &#8211');\n")))}d.isMDXComponent=!0}}]);